((nil .
      ((cider-clojure-cli-aliases . "-A:dev:test:cljs")
       (cider-preferred-build-tool       . clojure-cli)
       (cider-default-cljs-repl          . custom)
       (cider-custom-cljs-repl-init-form . "(do (user/cljs-repl))")
       (eval . (progn
                 (make-variable-buffer-local 'cider-jack-in-nrepl-middlewares)
                 (add-to-list 'cider-jack-in-nrepl-middlewares "shadow.cljs.devtools.server.nrepl/middleware")))
              
       (cider-offer-to-open-cljs-app-in-browser . nil)
       (clojure-indent-style . 'align-arguments)
       (eval . (define-clojure-indent
		 (ns '(1 (0)))
		 (cond-> 0)
		 (cond->> 0)
		 (as-> 0)
		 (reg-event-fx 0)
		 (reg-sub 0)
		 (defroutes 'defun)
		 (GET 2)
		 (POST 2)
		 (PUT 2)
		 (DELETE 2)
		 (HEAD 2)
		 (ANY 2)
		 (OPTIONS 2)
		 (PATCH 2)
		 (rfn 2)
		 (let-routes 1)
		 (context 2))))))
